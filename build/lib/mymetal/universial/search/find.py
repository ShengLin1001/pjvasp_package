from inspect import getargvalues, currentframe, stack
from mymetal.universial.check.checkinput import check_input
from mymetal.universial.data.dataadjust import my_down_up

##############################################################
############# find and extract the matched lines (up-down could be extract)
##############################################################

def find_line_position(file, search_string):
    """
    find the serch_string in file\n
    return a list of position of search_string\n
    noted, from 1, not 0. it's controled by start=1 or start=0\n
    """

    calling_function = stack()[1].function
    check_input(getargvalues(currentframe()).locals)

    file.seek(0)
    line_number_list = []
    for line_number, line in enumerate(file, start=1):
        #print(line)
        if search_string in line:
            #print(line)
            line_number_list.append(line_number)
    file.seek(0)
    return line_number_list

def extract_line_at_position(file, line_number_list, move_list_down_up = [-10,5]):
    """
    input is a position list generated by find_line_position()

    using my_down_up to enlarge the list controled by move_list_down_up (sorted)

    extract the line in position of list\n
    """
    calling_function = stack()[1].function
    check_input(getargvalues(currentframe()).locals)
    extract_lines = ''
    my_line_number_list = my_down_up(line_number_list, move_list_down_up)
    #print(my_line_number_list)
    for current_line_number, line in enumerate(file, start=1):
        if current_line_number in my_line_number_list:
            extract_lines = extract_lines + line
    file.seek(0)
    return extract_lines